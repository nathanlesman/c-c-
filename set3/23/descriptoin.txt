This advanced exercise is aimed at teaching the use of internal headers, scope management, and access control in a C/C++ project without using classes. It focuses on managing indentation depth in a console output through various functions (indented_cout, indent_more, indent_less, reset_indentation) while enforcing control over the global state (indentation depth) using static local variables, which ensures that only specific functions can modify it.

The goal is to avoid exposing this global state to all parts of the program, which could lead to errors (e.g., incorrect indentation) and uncontrolled changes. This exercise also emphasizes using one function per source file to practice modular code organization, while the static library libindent.a is built from these source files.
